// messages.proto
syntax = "proto3";

enum ProtoVersion{
    VERSION_NOT_SET = 0;
    VERSION = 1020;
}

// Message types below - Please note! Order is important
message Configuration {
    string client_id = 1;
    string wifi_ssid = 2;
    string wifi_password = 3;
    string broker_url = 4;
    uint32 broker_port = 5;
    string broker_user = 6;
    string broker_password = 7;
    string udp_url = 8;
    uint32 udp_port = 9;
    bool low_power = 10;
    uint32 status_led = 11;
    string topic_global = 12;
    string topic_local = 13;
    uint32 communication_delay = 14;
    uint32 application_generic = 15;
}

message BootInfo {
    string reboot_reason = 1;
    uint32 program_size = 2;
    string ip_address = 3;
    ProtoVersion proto_version = 4;
}

message Image {
    string reference_link = 1;
}

message Trigger {
    uint32 extra = 1;
}

message Temperature {
    enum Unit {
        CELSIUS = 0;
        FAHRENHEIT = 1;
    }
    float value = 1;
    Unit unit = 2;
}

message Humidity {
    enum Unit {
        RELATIVE_PROCENT = 0;
        ABSOLUTE = 1;
    }
    float value = 1;
    Unit unit = 2;
}

message Mass {
    enum Unit {
        KILOGRAMS = 0;
        HECTOGRAM = 1;
        GRAMS = 2;
        MILLIGRAM = 3;
        POUND = 4;
        OUNCE = 5;
    }
    float value = 1;
    Unit unit = 2;
}

message PHconcentration {
    float value = 1;
}

message ElectricPower {
    enum Unit {
        WATTS = 0;
        KILOWATTS = 1;
    }

    float value = 1;
    Unit unit = 2;
    int32 pulses = 3;
}

message GpsCoordinates {
    enum Unit {
        DECIMAL_DEGREE = 0;
        METER = 1;
    }

    float longitude = 1;
    Unit longitude_unit = 2;
    float latitude = 3;
    Unit latitude_unit = 4;
    float height_ = 5;
    Unit height_unit = 6;
}

message RunStepperMotorRaw {
    enum Direction {
        CLOCKWISE = 0;
        COUNTER_CLOCKWISE = 1;
    }

    enum StepSize {
        FULL_STEP = 0;
        HALF_STEP = 1;
        QUARTER_STEP = 2;
    }

    Direction direction = 1;
    int32 delay_between_steps = 2;
    int32 number_of_step = 3;
    StepSize step_size = 4;
}

message RunStepperMotor {
    enum Direction {
        CLOCKWISE = 0;
        COUNTER_CLOCKWISE = 1;
    }

    Direction direction = 1;
    float rpm = 2;
    float angle = 3;
}

message RunDcMotor {
    enum Direction {
        CLOCKWISE = 0;
        COUNTER_CLOCKWISE = 1;
    }

    Direction direction = 1;
    float rpm = 2;
}

message AtmosphericPressure {
    enum Unit {
        PA = 0;
        BAR = 1;
        PSI = 2;
        TORR = 3;
    }

    float value = 1;
    Unit unit = 2;
}

message Illuminance {
    enum Unit {
        LUX = 0;
    }

    float value = 1;
    Unit unit = 2;
}

message Alarm {
    enum Severity {
        LEVEL1 = 0;
        LEVEL2 = 1;
        LEVEL3 = 2;
        LEVEL4 = 3;
        LEVEL5 = 4;
    }

    String info = 1;
    Severity severity = 2;
}

message Switch {
    bool state = 1;
}
